swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
host: petstore.swagger.io
schemes:
- http
paths:
  /pet-with-object:
    get:
      summary: List pet with object
      operationId: listPetObject
      tags:
      - pets
      responses:
        "200":
          description: An paged array of pets
          schema:
            required:
            - field2
            properties:
              field2:
                type: object
                required:
                - field3
                properties:
                  field3:
                    type: integer

        default:
          description: unexpected error
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
              # require: true
          schema:
            $ref: '#/definitions/Error'
  /pet-test:
    get:
      summary: List pet with object
      operationId: listPetObjects
      tags:
      - pets
      responses:
        "200":
          description: An paged array of pets
#          headers:
#            x-next:
#              type: string
#              description: A link to the next page of responses
#              # require: true
          schema:
#            type: array
#            items:
#              required:
#              - field1
            properties:
              field1:
                type: string
                enum: ['enum1', 'enum2']
  /pet-with-enum:
    get:
      summary: List pet with object
      operationId: listPetObjects
      tags:
      - pets
      responses:
        "200":
          description: An paged array of pets
          schema:
            required:
            - field1
            properties:
              field1:
                type: string
                enum: ['enum1', 'enum2']
  /pet-with-array:
    get:
      summary: List pet with object
      operationId: listPetObjecta
      tags:
      - pets
      responses:
        "200":
          description: An paged array of pets
          schema:
            type: array
            items:
              type: object
              required:
              - field1
              properties:
                field1:
                  type: string
  /pet-with-empty-body:
    delete:
      summary: List pet with object
      operationId: listPetObjectt
      tags:
      - pets
      responses:
        "204":
          description: An paged array of pets
  /pet-with-header:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      summary: List pet with object
      operationId: listPetObjecty
      tags:
      - pets
      responses:
        "200":
          description: An paged array of pets
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
              # require: true
            pattern-header:
              type: string
              pattern: '^\d{1,3}\.\d{1,3}$'
              description: A link to the next page of responses
            minlength-header:
              type: string
              minLength: 1
              description: A link to the next page of responses
            # required: true
  /pet-with-body-header:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      summary: List pet with object
      operationId: listPetObjectyy
      tags:
      - pets
      responses:
        "200":
          description: An paged array of pets
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Pet'
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
      - pets
      parameters:
      - $ref: '#/parameters/ApiRequestId'
      - $ref: '#/parameters/ApiVersion'
      - name: limit
        in: query
        description: How many items to return at one time (max 100)
        required: false
        type: integer
        # format: int32
        minimum: 1
        maximum: 100
      - name: page
        in: query
        description: page number
        required: true
        type: integer
        # format: int32
        minimum: 0
      responses:
        "200":
          description: An paged array of pets
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a pet
      operationId: createPets
      parameters:
      - $ref: '#/parameters/ApiRequestId'
      - name: body
        in: body
        required: true
        schema:
          required:
          - name
          - test
          properties:
            name:
              type: string
            age:
              type: integer
            tag:
              type: string
            test:
              type: object
              required:
              - field1
              properties:
                field1:
                  type: string
                  enum: ['enum1', 'enum2']
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Info for a specific pet
      operationId: updatePats
      tags:
      - pets
      consumes:
      - application/json
      - form-data
      parameters:
      - name: body
        in: body
        schema:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              age:
                type: integer
              tag:
                type: string
              awards:
                type: array
                items: {}
                default: []
              colour:
                type: string
                default: unknown
              test:
                type: object
                required:
                - field1
                properties:
                  field1:
                    type: string
                    enum: ['enum1', 'enum2']
                  field2:
                    type: integer
              test2:
                type: object
              test3:
                type: object
                properties:
                  field1:
                    type: string
                    enum: ['enum1', 'enum2']
                  field2:
                    type: integer
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Info for a specific pet
      operationId: incrementallyUpdatePet
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - pets
      parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
      - pets
      parameters:
      - $ref: '#/parameters/ApiVersion'
      - $ref: '#/parameters/ApiRequestId'
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        type: string
        minLength: 3
        maxLength: 10
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Info for a specific pet
      operationId: showPetById2
      tags:
      - pets
      consumes:
      - application/json
      parameters:
      - $ref: '#/parameters/ApiVersion'
      - $ref: '#/parameters/ApiRequestId'
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        type: string
        minLength: 3
        maxLength: 10
      - name: body
        in: body
        schema:
          type: object
          properties:
            name:
              type: string
            age:
              type: integer
            tag:
              type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Pets'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /heartbeat:
    get:
      summary: Info for current system status
      operationId: getHearbeat
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/StatusReport'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /text:
    put:
      produces:
      - text/html
      - text/plain
      parameters:
      - name: body
        in: body
        schema:
          type: string
        required: true
      responses:
        "200":
          description: Expected response to a valid request
          test:
            type: string
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Pet:
    required:
    - id
    - name
    properties:
      id:
        type: integer
      #        format: int64
      #        minLength: 3
      name:
        type: string
      tag:
        type: string
  Pets:
    type: array
    items:
      $ref: '#/definitions/Pet'
  Error:
    required:
    - code
    - message
    properties:
      code:
        type: integer
        # format: int32
      message:
        type: string
  StatusReport:
    required:
    - text
    - code
    properties:
      text:
        type: string
      code:
        type: string
parameters:
  ApiVersion:
    name: 'api-version'
    in: header
    description: 'The api version. It overwrites the account settings.'
    required: true
    type: string
    minLength: 1
    pattern: '^\d{1,3}\.\d{1,3}$'
    x-example: '3.0'
  ApiRequestId:
    name: 'request-id'
    in: header
    description: 'global request id through the system.'
    type: string
    minLength: 1
    x-example: '123456'
